{{- $defaultSecretName := include "importer.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "importer.fullname" . }}
  labels:
    {{- include "importer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "importer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "importer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: FIREFLY_III_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fireflyiii.auth.existingSecret | default $defaultSecretName }}
                  key: accessToken
            - name: FIREFLY_III_URL
              value: {{ .Values.fireflyiii.url }}
            {{- if .Values.fireflyiii.vanityUrl }}
            - name: VANITY_URL
              value: {{ .Values.fireflyiii.vanityUrl }}
            {{- end }}
            - name: TRUSTED_PROXIES
              value: {{ .Values.trustedProxies | quote }}
          {{- if or .Values.config.envValueFrom }}
          {{- range $key, $value := .Values.config.envValueFrom }}
            - name: {{ $key }}
              valueFrom: {{- $value | toYaml | nindent 16 }}
          {{- end }}
          {{- end }}
          {{- if or (.Values.config.env) (.Values.config.existingSecret) }}
          envFrom:
            {{- if .Values.config.env }}
            - configMapRef:
                name: {{ template "importer.fullname" . }}
            {{- end }}
            {{- if .Values.config.existingSecret }}
            - secretRef:
                name: {{ .Values.config.existingSecret }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
